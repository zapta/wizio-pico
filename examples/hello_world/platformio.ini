; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:raspberry-pi-pico]
; The specification of the platform and platform_packages below causes
; automatic loading of the latest version. To pin a specific version
; see the platformio discussion at 
; https://community.platformio.org/t/how-to-specify-desired-version-of-an-installed-framework/21970/8
platform = https://github.com/Wiz-IO/wizio-pico.git
platform_packages =
	framework-wizio-pico@https://github.com/Wiz-IO/framework-wizio-pico.git
board = raspberry-pi-pico
; 'baremetal' is the Pico C++ SDK experience.
framework = baremetal
; As for Juen 2021, this works on Windows, using a second
; Pico with the 'picoprobe' firmware as a hardware debugger
; to set breakpoints, single steps, examing variables, etc.
upload_protocol = picoprobe
debug_tool = picoprobe
; Adjust to the actual port used by the Pico on your system.
monitor_port = COM4
; This enables Pico's int64 printf.
board_build.nano = disable
; The -I options allows to jump to SDK declarations and definitions.
build_flags = 
	-I "$PROJECT_CORE_DIR/packages/framework-wizio-pico/SDK111/hardware"
	-I "$PROJECT_CORE_DIR/packages/framework-wizio-pico/SDK/pico"
	-D LIB_PICO_STDIO_USB
	
;monitor_speed = 115200
;lib_deps = 
