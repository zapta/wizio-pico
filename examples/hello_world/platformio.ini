; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:raspberry-pi-pico]
; Fixing to Wizio 1.08 which is known to work as of June 2021.
platform = https://github.com/Wiz-IO/wizio-pico.git#3250e0732cf4c0ff72d4c689317fc7481a34b612
platform_packages =
	framework-wizio-pico@https://github.com/Wiz-IO/framework-wizio-pico.git#6f1e42f31a10441688c67588d98ffc9473a2470d
board = raspberry-pi-pico
; 'baremetal' is the Pico C++ SDK experience.
framework = baremetal
; As for Juen 2021, this works on Windows, using a second
; Pico with the 'picoprobe' firmware as a hardware debugger
; to set breakpoints, single steps, examing variables, etc.
upload_protocol = picoprobe
debug_tool = picoprobe
; Adjust to the actual port used by the Pico on your system.
monitor_port = COM[2345]
; This enables Pico's int64 printf.
board_build.nano = disable
; The -I options allows to jump to SDK declarations and definitions.
build_flags = 
	-I "$PROJECT_CORE_DIR/packages/framework-wizio-pico/SDK111/hardware"
	-I "$PROJECT_CORE_DIR/packages/framework-wizio-pico/SDK/pico"
	-D PICO_STDIO_USB

;monitor_speed = 115200

;lib_deps = 
